.navbar.navbar-default.top-nav.navbar-fixed-top{role: "navigation"}
  .container-fluid
    .navbar-header
      %button.navbar-toggle{data:{target: ".navbar-collapse", toggle: "collapse", type: "button"}}
        %span.sr-only Toggle navigation
        %span.icon-bar
        %span.icon-bar
        %span.icon-bar
      = link_to "First Coast Green Pages", root_path, class: 'navbar-brand'
    .navbar-collapse.collapse
      %ul.nav.navbar-nav.navbar-left
        %li
          = link_to vendors_path do
            %i.fa.fa-leaf
            Listings
        %li
          = link_to categories_path do
            %i.fa.fa-book
            Categories

        - Page.where(ancestry: nil).take(5).each do |top_page|
          - if top_page.has_children?
            %li.dropdown
              %a.dropdown-toggle{data: {toggle: "dropdown"}, href: "#"}
                = top_page.title
                %b.caret
              %ul.dropdown-menu
                %li
                  %a{href: "/#{top_page.name}"}
                    = top_page.title
                - top_page.children.each do |sub|
                  %li
                    %a{href: "/#{sub.name}"}
                      = sub.title
          - else
            %li
              %a{href: "/#{top_page.name}"}
                = top_page.title

        %li
          = link_to 'Sign Up!', signup_path

      %ul.nav.navbar-nav.pull-right
        - if current_member
          %li.dropdown
            %a.dropdown-toggle{data: {toggle: "dropdown"}, href: "#"}
              Welcome #{current_member.email}
              %b.caret
            %ul.dropdown-menu
              - if current_member.admin?
                %li= link_to "Site Administration", admin_path
                %li.divider
              %li= link_to "User Profile", current_member
              %li= link_to "Change Password", current_member
              %li.divider
              %li= link_to "Log out", destroy_member_session_path, :method => :delete
        - else
          %li= link_to 'Sign In', '/members/sign_in'
